# This workflow will build a docker container, publish it to IBM Container Registry, and deploy it to IKS when there is a push to the master branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains a Dockerfile
# 2. Setup secrets in your repository by going to settings: Create  IBM_CLOUD_API_KEY
# 3. Change the values for the IBM_CLOUD_REGION, IMAGE_NAME, IKS_CLUSTER, DEPLOYMENT_NAME, and PORT

name: Build and Deploy to IKS

on:
  push:
    branches:
      - master

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_HOSTNAME: gigderoma
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_REPOSITORY }}


jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    # Build the Docker image
    - name: Build with Docker
      run: |
        docker build -t "$REGISTRY_HOSTNAME"/"$IMAGE_NAME":"latest" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" .
    - name: log into registry ${{ env.REGISTRY_HOSTNAME }}
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}      

    # Push the image to Docker Container Registry
    - name: Push the image to docker.io
      run: |
        docker push $REGISTRY_HOSTNAME/$IMAGE_NAME:latest

